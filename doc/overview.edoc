%%==============================================================================
%% Copyright 2012 Benoît Chesneau
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%% http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.
%%==============================================================================


@copyright 2012 Benoît Chesneau.
@version 0.1
@title hackney - simple HTTP client in Erlang


@doc

# hackney

**hackney** is a simple HTTP client. 

Main features:

- no message passing: response is directly streamed to the current
  process and a state is kept in a `#client{}` record.
- Keepalive handling
- basic authentication
- stream binary bodies
- Can send files using the sendfile API 
- Chunked encoding support
- Used parse transform for shorcut method calls:

    request:get(<<"/some/path">>).


hackney is based on some code from cowboy.

TODO:

- add pool support
- add body passed via a function support
- multipart handling
- Websocket handling
- SPDY handling
- Full binary

## Usage example (without pool)


See the
[example][(http://github.com/benoitc/hackney/blob/master/examples/test.ebin).


Contribute
----------
For issues, comments or feedback please [create an issue!] [1]

[1]: http://github.com/benoitc/hackney/issues "hackney issues"



@end
